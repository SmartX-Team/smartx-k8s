{{- define "helm.operator.aggregate" -}}
{{- range $_ := list "name" "spec" }}
{{- if not ( index $ . ) }}
{{- fail ( printf "Internal error: No such aggregation operator field: %s" . ) }}
{{- end }}
{{- end }}
{{- with .spec }}
{{- $ollama := .params.ollama | default false }}
---
kind: LLM
params:
  - name: min
    type: Integer
    default: 2
  - name: max
    type: Integer
    optional: true
  - name: modelName
    type: String
    default: exaone3.5:32b
  - name: ollama
    type: Boolean
    default: false
env:
  - name: MESSENGER_SRC_COUNT_MIN
    value: {{ .params.min | quote }}
{{- if ne nil .params.max }}
  - name: MESSENGER_SRC_COUNT_MAX
    value: {{ .params.max | quote }}
{{- end }}
{{- if $ollama }}
  - name: OLLAMA_BASE_URL
    value: http://localhost:11434
  - name: OLLAMA_MODEL_NAME
    value: {{ .params.modelName | quote }}
{{- else }}
  - name: OPENAI_MODEL_NAME
    value: {{ .params.modelName | quote }}
{{- end }}
features:
  ollama: {{ $ollama }}
resources: null
srcs: null
sinks:
  - kind: Stream
template: |
{{- end }}
{{- $file := printf "prompts/%s.yaml" .name }}
{{- if .spec.Files.Glob $file | empty }}
{{- fail ( printf "No such aggregation operator prompt: %s (%s)" .name $file ) }}
{{- end }}
{{- .spec.Files.Get $file | trim | nindent 2 }}
{{- end }}
