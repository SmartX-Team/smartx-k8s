---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-pool" ( include "helm.fullname" $ ) | quote }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
{{- include "helm.labels" $ | nindent 4 }}
    app.kubernetes.io/component: pool
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
{{- include "helm.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/component: pool
  template:
    metadata:
      annotations:
        instrumentation.opentelemetry.io/inject-sdk: "true"
      labels:
{{- include "helm.labels" $ | nindent 8 }}
        app.kubernetes.io/component: pool
    spec:
      affinity:
        nodeAffinity:
          # KISS normal control plane nodes should be preferred
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/kiss-ephemeral-control-plane
                    operator: DoesNotExist
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/kiss
                    operator: In
                    values:
                      - Compute
              weight: 2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/kiss
                    operator: In
                    values:
                      - ControlPlane
                      - Compute
      containers:
        - name: pool
          image: "{{ .Values.operator.image.repo }}:{{ .Values.operator.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.operator.image.pullPolicy | quote }}
          command:
            - /usr/bin/env
            - openark-spectrum-pool
          env:
            - name: OPENARK_SPECTRUM_POOL_MAX_SIZE
              value: {{ .Values.pool.size | int | quote }}
            # - name: OPENARK_SPECTRUM_POOL_PATH
            #   value: /data/openark/spectrum/pool
            - name: RUST_LOG
              value: INFO
          ports:
            - name: http
              protocol: TCP
              containerPort: 9000
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            httpGet:
              path: "{{ .Values.pool.baseUrl }}/ping"
              port: http
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            httpGet:
              path: "{{ .Values.pool.baseUrl }}/health"
              port: http
          resources:
            requests:
              cpu: 500m
              memory: 200Mi
            limits:
              cpu: 1000m
              memory: 1Gi
      securityContext:
        seccompProfile:
          type: RuntimeDefault
---
apiVersion: v1
kind: Service
metadata:
  name: {{ printf "%s-pool" ( include "helm.fullname" $ ) | quote }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{ index .Values.openark.labels "org.ulagbulag.io/is-private" | quote }}: "true"
{{- include "helm.labels" $ | nindent 4 }}
    app.kubernetes.io/component: pool
spec:
  type: ClusterIP
  selector:
{{- include "helm.selectorLabels" $ | nindent 4 }}
    app.kubernetes.io/component: pool
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 9000
