---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm.fullname" $ | quote }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{ index .Values.openark.labels "org.ulagbulag.io/is-private" | quote }}: "true"
{{- include "helm.labels" $ | nindent 4 }}
    app.kubernetes.io/component: dashboard
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
{{- include "helm.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/component: dashboard
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        instrumentation.opentelemetry.io/inject-sdk: "true"
      labels:
        {{ index .Values.openark.labels "org.ulagbulag.io/is-private" | quote }}: "true"
{{- include "helm.labels" $ | nindent 8 }}
        app.kubernetes.io/component: dashboard
    spec:
      affinity:
        nodeAffinity:
          # KISS normal control plane nodes should be preferred
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/kiss-ephemeral-control-plane
                    operator: DoesNotExist
            # KISS compute nodes should be preferred
            - weight: 2
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/kiss
                    operator: In
                    values:
                      - Compute
            # KISS gateway nodes should be more preferred
            - weight: 4
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/kiss
                    operator: In
                    values:
                      - Gateway
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/kiss
                    operator: In
                    values:
                      - ControlPlane
                      - Compute
                      - Gateway
      containers:
        - name: nginx
          image: "{{ .Values.dashboard.image.repo }}:{{ .Values.dashboard.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.dashboard.image.pullPolicy | quote }}
          ports:
            - name: http
              protocol: TCP
              containerPort: 6080
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            httpGet:
              path: /
              port: http
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            httpGet:
              path: /_health
              port: http
          resources:
            requests:
              cpu: "1"
              memory: 200Mi
            limits:
              cpu: "2"
              memory: 500Mi
      securityContext:
        seccompProfile:
          type: RuntimeDefault
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "helm.fullname" $ | quote }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{ index .Values.openark.labels "org.ulagbulag.io/is-private" | quote }}: "true"
{{- include "helm.labels" $ | nindent 4 }}
    app.kubernetes.io/component: dashboard
spec:
  selector:
{{- include "helm.selectorLabels" $ | nindent 4 }}
    app.kubernetes.io/component: dashboard
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 6080
{{- if .Values.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "helm.fullname" $ | quote }}
  namespace: {{ .Release.Namespace | quote }}
  annotations:
    cert-manager.io/cluster-issuer: {{ .Values.ingress.domainName | quote }}
  labels:
    {{ index .Values.openark.labels "org.ulagbulag.io/is-private" | quote }}: "true"
{{- include "helm.labels" $ | nindent 4 }}
    app.kubernetes.io/component: dashboard
spec:
  ingressClassName: {{ .Values.ingress.domainName | quote }}
  tls:
    - secretName: "{{ .Values.ingress.domainName }}-tls"
      hosts:
        - {{ .Values.ingress.domainName | quote }}
  rules:
    - host: {{ .Values.ingress.domainName | quote }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ include "helm.fullname" $ | quote }}
                port:
                  number: 80
{{- if .Values.features.desktopEnvironment }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "{{ include "helm.fullname" $ }}-proxy"
  namespace: {{ .Release.Namespace | quote }}
  annotations:
    cert-manager.io/cluster-issuer: {{ .Values.ingress.domainName | quote }}
    nginx.ingress.kubernetes.io/auth-url: "https://{{ .Values.auth.domainName }}/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://{{ .Values.auth.domainName }}/oauth2/start?rd=https://$host$escaped_request_uri"
  labels:
    {{ index .Values.openark.labels "org.ulagbulag.io/is-private" | quote }}: "true"
{{- include "helm.labels" $ | nindent 4 }}
    app.kubernetes.io/component: dashboard-proxy
spec:
  ingressClassName: {{ .Values.ingress.domainName | quote }}
  tls:
    - secretName: "{{ .Values.ingress.domainName }}-tls"
      hosts:
        - {{ .Values.ingress.domainName | quote }}
  rules:
    - host: {{ .Values.ingress.domainName | quote }}
      http:
        paths:
          - path: /u/tables/vine-dashboard/sessions
            pathType: Exact
            backend:
              service:
                name: {{ include "helm.fullname" $ | quote }}
                port:
                  number: 80
{{- end }}
{{- end }}
