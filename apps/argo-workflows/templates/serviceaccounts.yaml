---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default
  namespace: {{ .Release.Namespace | quote }}
  annotations:
    # The rule is an expression used to determine if this service account
    # should be used.
    # * `groups` - an array of the OIDC groups
    # * `iss` - the issuer ("argo-server")
    # * `sub` - the subject (typically the username)
    # Must evaluate to a boolean.
    # If you want an account to be the default to use, this rule can be "true".
    # Details of the expression language are available in
    # https://expr-lang.org/docs/language-definition.
    workflows.argoproj.io/rbac-rule: "true"
    # The precedence is used to determine which service account to use when
    # Precedence is an integer. It may be negative. If omitted, it defaults to "0".
    # Numerically higher values have higher precedence (not lower, which maybe
    # counter-intuitive to you).
    # If two rules match and have the same precedence, then which one used will
    # be arbitrary.
    workflows.argoproj.io/rbac-rule-precedence: "0"
  labels:
{{- include "helm.labels" $ | nindent 4 }}
---
apiVersion: v1
kind: Secret
metadata:
  name: default.service-account-token
  namespace: {{ .Release.Namespace | quote }}
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
    kubernetes.io/service-account.name: default
  labels:
{{- include "helm.labels" $ | nindent 4 }}
type: kubernetes.io/service-account-token
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ include "helm.fullname" $ }}-{{ .Values.smartx.group.name }}"
  namespace: {{ .Release.Namespace | quote }}
  annotations:
    # The rule is an expression used to determine if this service account
    # should be used.
    # * `groups` - an array of the OIDC groups
    # * `iss` - the issuer ("argo-server")
    # * `sub` - the subject (typically the username)
    # Must evaluate to a boolean.
    # If you want an account to be the default to use, this rule can be "true".
    # Details of the expression language are available in
    # https://expr-lang.org/docs/language-definition.
    workflows.argoproj.io/rbac-rule: "'{{ .Values.smartx.group.name }}' in groups"
    # The precedence is used to determine which service account to use when
    # Precedence is an integer. It may be negative. If omitted, it defaults to "0".
    # Numerically higher values have higher precedence (not lower, which maybe
    # counter-intuitive to you).
    # If two rules match and have the same precedence, then which one used will
    # be arbitrary.
    workflows.argoproj.io/rbac-rule-precedence: "2"
  labels:
{{- include "helm.labels" $ | nindent 4 }}
---
apiVersion: v1
kind: Secret
metadata:
  name: "{{ include "helm.fullname" $ }}-{{ .Values.smartx.group.name }}.service-account-token"
  namespace: {{ .Release.Namespace | quote }}
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
    kubernetes.io/service-account.name: "{{ include "helm.fullname" $ }}-{{ .Values.smartx.group.name }}"
  labels:
{{- include "helm.labels" $ | nindent 4 }}
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "{{ include "helm.fullname" $ }}-{{ .Values.smartx.group.name }}"
  annotations:
    kubernetes.io/service-account.name: {{ .Values.smartx.group.name | quote }}
    kubernetes.io/service-account.namespace: {{ .Release.Namespace | quote }}
  labels:
{{- include "helm.labels" $ | nindent 4 }}
rules:
  - apiGroups:
      - ""
    resources:
      - events
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/log
    verbs:
      - get
      - watch
  - apiGroups:
      - argoproj.io
    resources:
      - clusterworkflowtemplates
      - cronworkflows
      - eventsources
      - sensors
      - workfloweventbindings
      - workflows
      - workflowtaskresults
      - workflowtemplates
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "{{ include "helm.fullname" $ }}-{{ .Values.smartx.group.name }}"
  annotations:
    kubernetes.io/service-account.name: {{ .Values.smartx.group.name | quote }}
    kubernetes.io/service-account.namespace: {{ .Release.Namespace | quote }}
  labels:
{{- include "helm.labels" $ | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "{{ include "helm.fullname" $ }}-{{ .Values.smartx.group.name }}"
subjects:
  - kind: ServiceAccount
    name: "{{ include "helm.fullname" $ }}-{{ .Values.smartx.group.name }}"
    namespace: {{ .Release.Namespace | quote }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default
  namespace: {{ .Values.smartx.twin.namespace | quote }}
  annotations:
    # The rule is an expression used to determine if this service account
    # should be used.
    # * `groups` - an array of the OIDC groups
    # * `iss` - the issuer ("argo-server")
    # * `sub` - the subject (typically the username)
    # Must evaluate to a boolean.
    # If you want an account to be the default to use, this rule can be "true".
    # Details of the expression language are available in
    # https://expr-lang.org/docs/language-definition.
    workflows.argoproj.io/rbac-rule: "'{{ .Values.smartx.cluster.name }}' in groups"
    # The precedence is used to determine which service account to use when
    # Precedence is an integer. It may be negative. If omitted, it defaults to "0".
    # Numerically higher values have higher precedence (not lower, which maybe
    # counter-intuitive to you).
    # If two rules match and have the same precedence, then which one used will
    # be arbitrary.
    workflows.argoproj.io/rbac-rule-precedence: "1"
  labels:
{{- include "helm.labels" $ | nindent 4 }}
---
apiVersion: v1
kind: Secret
metadata:
  name: default.service-account-token
  namespace: {{ .Values.smartx.twin.namespace | quote }}
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
    kubernetes.io/service-account.name: default
  labels:
{{- include "helm.labels" $ | nindent 4 }}
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "{{ include "helm.fullname" $ }}-default"
  namespace: {{ .Values.smartx.twin.namespace | quote }}
  annotations:
    kubernetes.io/service-account.name: default
  labels:
{{- include "helm.labels" $ | nindent 4 }}
rules:
  - apiGroups:
      - ""
    resources:
      - events
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/log
    verbs:
      - get
      - watch
  - apiGroups:
      - argoproj.io
    resources:
      - cronworkflows
      - eventsources
      - sensors
      - workfloweventbindings
      - workflows
      - workflowtaskresults
      - workflowtemplates
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "{{ include "helm.fullname" $ }}-default"
  namespace: {{ .Values.smartx.twin.namespace | quote }}
  annotations:
    kubernetes.io/service-account.name: default
  labels:
{{- include "helm.labels" $ | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "{{ include "helm.fullname" $ }}-default"
subjects:
  - kind: ServiceAccount
    name: default
