---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ include "helm.fullname" $ }}-stunnel"
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: "{{ include "helm.fullname" $ }}-stunnel"
{{- include "helm.labels" $ | nindent 4 }}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: "{{ include "helm.fullname" $ }}-stunnel"
  template:
    metadata:
      labels:
        app: "{{ include "helm.fullname" $ }}-stunnel"
    spec:
      affinity:
        nodeAffinity:
          # KISS normal control plane nodes should be preferred
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/kiss-ephemeral-control-plane
                    operator: DoesNotExist
            # KISS compute nodes should be preferred
            - weight: 2
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/kiss
                    operator: In
                    values:
                      - Compute
            # KISS gateway nodes should be more preferred
            - weight: 4
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/kiss
                    operator: In
                    values:
                      - Gateway
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/kiss
                    operator: In
                    values:
                      - ControlPlane
                      - Compute
                      - Gateway
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: stunnel
          image: docker.io/dweomer/stunnel:latest
          imagePullPolicy: Always
          env:
            - name: STUNNEL_ACCEPT
              value: "389"
            - name: STUNNEL_CLIENT
              value: "yes"
            - name: STUNNEL_CONNECT
              valueFrom:
                secretKeyRef:
                  name: "{{ include "helm.fullname" $ }}-stunnel-ldap-cert"
                  key: connect
            - name: STUNNEL_SERVICE
              value: ldap
          ports:
            - name: ldap
              protocol: TCP
              containerPort: 389
          resources:
            requests:
              cpu: 30m
              memory: 20Mi
            limits:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: cert
              mountPath: /etc/stunnel/stunnel.pem
              subPath: ldap-client.crt
              readOnly: true
            - name: cert
              mountPath: /etc/stunnel/stunnel.key
              subPath: ldap-client.key
              readOnly: true
      volumes:
        - name: cert
          secret:
            secretName: "{{ include "helm.fullname" $ }}-stunnel-ldap-cert"
            defaultMode: 420 # 0o644
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ include "helm.fullname" $ }}-stunnel"
  namespace: {{ .Release.Namespace | quote }}
  labels:
{{- include "helm.labels" $ | nindent 4 }}
spec:
  selector:
    app: "{{ include "helm.fullname" $ }}-stunnel"
  ports:
    - name: ldap
      port: 389
      protocol: TCP
      targetPort: 389
