---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "helm.fullname" $ | quote }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
{{- include "helm.labels" $ | nindent 4 }}
spec:
  selector:
    matchLabels:
{{- include "helm.selectorLabels" $ | nindent 6 }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
{{- include "helm.selectorLabels" $ | nindent 8 }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/kiss
                    operator: In
                    values:
                      - Compute
                      - ControlPlane
                      - Storage
      automountServiceAccountToken: true
      containers:
        - name: kube-multus
          image: "{{ .Values.image.repo }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command:
            - /thin_entrypoint
          args:
            - --cni-conf-dir=/host/etc/cni/net.d
            - --multus-autoconfig-dir=/host/etc/cni/net.d
            - --multus-conf-file=auto
            - --multus-log-level=verbose
          resources: {{ .Values.resources | toYaml | nindent 12 }}
          securityContext: {{- .Values.securityContext | toYaml | nindent 12 }}
          volumeMounts:
            - name: host-cni-bin
              mountPath: /host/opt/cni/bin
            - name: host-cni-conf
              mountPath: /host/etc/cni/net.d
            - name: tmp
              mountPath: /tmp
      hostNetwork: true
      initContainers:
        - name: init-install-multus-binary
          image: "{{ .Values.image.repo }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command:
            - /install_multus
          args:
            - --type
            - thin
          securityContext: {{- .Values.securityContext | toYaml | nindent 12 }}
          volumeMounts:
            - name: host-cni-bin
              mountPath: /host/opt/cni/bin
              mountPropagation: Bidirectional
      securityContext:
        fsGroup: 0
        fsGroupChangePolicy: Always
      serviceAccountName: {{ include "helm.fullname" $ | quote }}
      terminationGracePeriodSeconds: 10
      tolerations: {{- .Values.tolerations | toYaml | nindent 8 }}
      volumes:
        - name: host-cni-bin
          hostPath:
            path: /opt/cni/bin
            type: Directory
        - name: host-cni-conf
          hostPath:
            path: /etc/cni/net.d
            type: Directory
        - name: tmp
          emptyDir: {}
