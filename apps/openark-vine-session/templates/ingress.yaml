{{- define "helm.baseUrl" -}}
{{- printf "sessions.%s" .Values.ingress.domainName }}
{{- end }}

{{- define "helm.ingress.rules" -}}
rules:

{{- /********************************/}}
{{- if and
  .Values.services.notebook.enabled
  ( not ( empty .Values.node.name ) )
}}
  - host: "notebook.{{ .Values.node.name }}.node.sessions.{{ .Values.ingress.domainName }}"
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: {{ include "helm.fullname" $ | quote }}
              port:
                number: 8888
{{- end }}

{{- /********************************/}}
{{- if and
  .Values.services.notebook.enabled
  ( not ( empty .Values.user.name ) )
}}
  - host: "notebook.{{ .Values.user.name }}.user.sessions.{{ .Values.ingress.domainName }}"
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: {{ include "helm.fullname" $ | quote }}
              port:
                number: 8888
{{- end }}

{{- /********************************/}}
{{- if and
  .Values.services.novnc.enabled
  ( not ( empty .Values.node.name ) )
}}
  - host: "vnc.{{ .Values.node.name }}.node.sessions.{{ .Values.ingress.domainName }}"
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: {{ include "helm.fullname" $ | quote }}
              port:
                number: 6080
{{- end }}

{{- /********************************/}}
{{- if and
  .Values.services.novnc.enabled
  ( not ( empty .Values.user.name ) )
}}
  - host: "vnc.{{ .Values.user.name }}.user.sessions.{{ .Values.ingress.domainName }}"
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: {{ include "helm.fullname" $ | quote }}
              port:
                number: 6080
{{- end }}

{{- end }}

{{- define "helm.tls" -}}
{{- $_ := set $ "TLS" list }}
{{- range $_, $_ := index ( include "helm.ingress.rules" $ | fromYaml ) "rules" }}
{{- $_ := set $ "TLS" ( append $.TLS .host ) }}
{{- end }}
{{- range $_ := $.TLS | uniq | sortAlpha }}
- secretName: "{{ . }}-cert"
  hosts:
    - {{ . | quote }}
{{- end }}
{{- $_ := unset $ "TLS" }}
{{- end }}

{{- $rules := index ( include "helm.ingress.rules" $ | fromYaml ) "rules" }}
{{- if not ( empty $rules ) }}

{{- if empty .Values.auth.domainName }}
{{- fail "auth.domainName is required to enable ingress" }}
{{- end }}

{{- if empty .Values.ingress.domainName }}
{{- fail "ingress.domainName is required to enable ingress" }}
{{- end }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "helm.fullname" $ | quote }}
  namespace: {{ .Release.Namespace | quote }}
  annotations:
    cert-manager.io/cluster-issuer: {{ .Values.ingress.domainName | quote }}
    nginx.ingress.kubernetes.io/auth-response-headers: Authorization, X-Auth-Request-Email, X-Auth-Request-Preferred-Username
    nginx.ingress.kubernetes.io/auth-url: "https://{{ .Values.auth.domainName }}/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://{{ .Values.auth.domainName }}/oauth2/start?rd=$escaped_request_uri"
{{- if not ( empty .Values.user.name ) }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($http_x_auth_request_preferred_username !~ "({{ .Values.user.name }})") {
        return 403;
      }
{{- end }}
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
  labels:
{{- include "helm.labels" $ | nindent 4 }}
spec:
  ingressClassName: {{ .Values.ingress.domainName | quote }}
  tls:
{{- include "helm.tls" $ | trim | nindent 4}}
  rules:
{{- $rules | toYaml | nindent 4 }}

{{- end }}
