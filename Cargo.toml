[workspace]
default-members = ["crates/openark-cli"]
members = ["crates/*"]
resolver = "2"

[profile.dev]
opt-level = 1 # serde + tracing may causes stack overflow

[workspace.package]
authors = ["Ho Kim <ho.kim@ulagbulag.io>"]
description = "Deploy & Integrate & Manage your own Converged K8S Edge Clusters"
documentation = "https://github.com/SmartX-Team/smartx-k8s"
edition = "2024"
include = ["src/**/*.rs", "Cargo.toml"]
keywords = ["iac", "kubernetes", "openark"]
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
readme = "./README.md"
rust-version = "1.85"
homepage = "https://github.com/SmartX-Team/smartx-k8s"
repository = "https://github.com/SmartX-Team/smartx-k8s"
version = "2.0.0-alpha.1"

[workspace.lints.clippy]
blocks_in_conditions = "allow" # opentelemetry tracing macro would be noisy

[workspace.dependencies]
connected-data-lake-api = { path = "crates/connected-data-lake-api" }
connected-data-lake-backend-fs = { path = "crates/connected-data-lake-backend-fs" }
connected-data-lake-backend-object-store = { path = "crates/connected-data-lake-backend-object-store" }
connected-data-lake-layer-delta-lake = { path = "crates/connected-data-lake-layer-delta-lake" }
openark-admission-openapi = { path = "crates/openark-admission-openapi" }
openark-core = { path = "crates/openark-core" }
openark-core-opentelemetry = { path = "crates/openark-core-opentelemetry" }
openark-kiss-api = { path = "crates/openark-kiss-api" }
openark-vine-api = { path = "crates/openark-vine-api" }
openark-vine-dashboard-api = { path = "crates/openark-vine-dashboard-api" }
openark-vine-dashboard-jq = { path = "crates/openark-vine-dashboard-jq" }
openark-vine-oauth = { path = "crates/openark-vine-oauth" }
openark-vine-session-api = { path = "crates/openark-vine-session-api" }
openark-vine-session-exec = { path = "crates/openark-vine-session-exec" }

actix-cors = { version = "0.7", default-features = false }
actix-web = { version = "4.10", default-features = false, features = [
    "compat",
    "compress-brotli",
    "compress-gzip",
    "compress-zstd",
    "http2",
    "macros",
    "unicode",
] }
actix-web-opentelemetry = { version = "0.21", default-features = false }
anyhow = { version = "1.0", default-features = false }
arrow = { version = "54", default-features = false, features = ["chrono-tz"] }
async-trait = { version = "0.1", default-features = false }
base64 = { version = "0.22", default-features = false }
chrono = { version = "0.4", default-features = false }
clap = { version = "4.5", default-features = false }
cookie = { version = "0.18", default-features = false }
codesnake = { version = "0.2", default-features = false }
convert-case = { package = "convert_case", version = "0.8", default-features = false }
datafusion = { version = "46", default-features = false }
fuser = { version = "0.15", default-features = false, features = ["abi-7-31"] }
futures = { version = "0.3", default-features = false }
getrandom = { version = "0.3", default-features = false }
gloo-net = { version = "0.6", default-features = false }
hifijson = { version = "0.2", default-features = false }
http = { version = "1.3", default-features = false }
itertools = { version = "0.14", default-features = false }
jaq-core = { version = "2.1", default-features = false }
jaq-json = { version = "1.1", default-features = false }
jaq-std = { version = "2.1", default-features = false }
json-patch = { version = "4.0", default-features = false } # should be synced with kube
jsonwebtoken = { version = "9.3", default-features = false }
k8s-openapi = { version = "0.24", default-features = false, features = [
    "v1_30",
] }
kcr-argoproj-io = { package = "kcr_argoproj_io", version = "*", default-features = false, features = [
    "v1alpha1",
    "v1beta1",
] }
kube = { version = "0.99", default-features = false }
kube-quantity = { package = "kube_quantity", version = "0.8", default-features = false }
libc = { version = "0.2", default-features = false }
opentelemetry = { version = "0.28", default-features = false }
opentelemetry-appender-tracing = { version = "0.28", default-features = false }
opentelemetry-otlp = { version = "0.28", default-features = false }
opentelemetry-sdk = { package = "opentelemetry_sdk", version = "0.28", default-features = false }
regex = { version = "1.11", default-features = false }
reqwest = { version = "0.12", default-features = false, features = [
    "charset",
    "http2",
    "macos-system-configuration",
] }
rustls = { version = "=0.23", default-features = false }
rustls-pemfile = { version = "2.2", default-features = false }
schemars = { version = "0.8", default-features = false, features = [
    "preserve_order",
] }
serde = { version = "1.0", default-features = false }
serde-json = { package = "serde_json", version = "1.0", default-features = false }
serde-urlencoded = { package = "serde_urlencoded", version = "0.7", default-features = false }
strum = { version = "0.27", default-features = false }
thiserror = { version = "2.0", default-features = false }
tracing = { version = "0.1", default-features = false }
tracing-opentelemetry = { version = "0.29", default-features = false } # should be synced with opentelemetry
tracing-subscriber = { version = "0.3", default-features = false }
tracing-web = { version = "0.1", default-features = false }
tokio = { version = "1", default-features = false }
unicode-width = { version = "0.2", default-features = false, features = [
    "cjk",
] }
url = { version = "2.5", default-features = false }
uuid = { version = "1.15", default-features = false }
web-sys = { version = "0.3", default-features = false }
yew = { version = "0.21", default-features = false }
yew-router = { version = "0.18", default-features = false }
yewdux = { version = "0.11", default-features = false, features = ["future"] }
