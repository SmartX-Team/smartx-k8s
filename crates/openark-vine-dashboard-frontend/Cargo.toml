[package]
name = "openark-vine-dashboard-frontend"

authors = { workspace = true }
description = { workspace = true }
documentation = { workspace = true }
edition = { workspace = true }
include = { workspace = true }
keywords = { workspace = true }
license = { workspace = true }
readme = { workspace = true }
rust-version = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
version = { workspace = true }

[lints]
workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["production"]
production = [
    "tls-default",
    "opentelemetry-all",
    # "opentelemetry-otlp",
    "ttl",
]

# Caching
ttl = []

# OpenTelemetry
opentelemetry = ["openark-core/opentelemetry", "tracing"]
opentelemetry-all = [
    "openark-core/opentelemetry-all",
    "opentelemetry-logs",
    "opentelemetry-metrics",
    "opentelemetry-trace",
]
opentelemetry-otlp = ["openark-core/opentelemetry-otlp", "opentelemetry"]

# OpenTelemetry pillars and functions
opentelemetry-logs = ["openark-core/opentelemetry-logs", "opentelemetry"]
opentelemetry-metrics = ["openark-core/opentelemetry-metrics", "opentelemetry"]
opentelemetry-trace = ["openark-core/opentelemetry-trace", "opentelemetry"]

# TLS
tls-default = ["tls-aws-lc-rs"]
tls-aws-lc-rs = ["openark-vine-dashboard-api/tls-aws-lc-rs"]
tls-openssl = ["openark-vine-dashboard-api/tls-openssl"]

# Tracing
tracing = [
    "dep:tracing",
    "jaq-std/log",
    "openark-core/tracing",
    "openark-vine-dashboard-api/tracing",
    "openark-vine-oauth/tracing",
]

[dependencies]
openark-core = { workspace = true, features = ["std"] }
openark-vine-dashboard-api = { workspace = true, features = ["client", "std"] }
openark-vine-dashboard-jq = { workspace = true, features = ["std"] }
openark-vine-oauth = { workspace = true, features = [
    "error-decode",
    "rand",
    "std",
] }
openark-vine-session-api = { workspace = true, features = ["client", "std"] }

anyhow = { workspace = true, features = ["std"] }
async-trait = { workspace = true }
chrono = { workspace = true, features = ["std"] }
convert-case = { workspace = true }
gloo-net = { workspace = true, features = ["eventsource", "http", "json"] }
http = { workspace = true, features = ["std"] }
itertools = { workspace = true, features = ["use_std"] }
jaq-core = { workspace = true, features = ["std"] }
jaq-json = { workspace = true, features = ["parse"] }
jaq-std = { workspace = true, features = [
    "format",
    "math",
    "regex",
    "std",
    "time",
] }
regex = { workspace = true, features = ["std"] }
serde = { workspace = true, features = ["std"] }
serde-json = { workspace = true, features = ["std"] }
serde-urlencoded = { workspace = true }
tracing = { workspace = true, optional = true, features = [
    "attributes",
    "std",
] }
url = { workspace = true, features = ["std"] }
web-sys = { workspace = true, features = [
    "HtmlInputElement",
    "Location",
    "RequestMode",
    "RequestRedirect",
    "Window",
] }
yew = { workspace = true, features = ["csr"] }
yew-router = { workspace = true }
yewdux = { workspace = true }
