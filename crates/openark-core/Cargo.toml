[package]
name = "openark-core"

authors = { workspace = true }
description = { workspace = true }
documentation = { workspace = true }
edition = { workspace = true }
include = { workspace = true }
keywords = { workspace = true }
license = { workspace = true }
readme = { workspace = true }
rust-version = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
version = { workspace = true }

[lints]
workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = []
alloc = ["openark-core-opentelemetry?/alloc", "serde?/alloc"]
std = [
    "clap?/std",
    "http?/std",
    "openark-core-opentelemetry?/std",
    "rustls?/std",
    "serde?/std",
    "serde-json?/std",
    "url/std",
]

clap = ["dep:clap", "std"]
client = [
    "alloc",
    "dep:anyhow",
    "dep:async-trait",
    "dep:http",
    "dep:serde",
    "dep:url",
    "dep:web-sys",
    "serde/derive",
    "web-sys?/RequestCredentials",
]
operator = [
    "dep:async-trait",
    "dep:chrono",
    "dep:k8s-openapi",
    "dep:kube",
    "dep:serde",
    "dep:serde-json",
    "kube/client",
    "kube/runtime",
    "std",
]
reqwest = ["client", "dep:reqwest"]

# OpenTelemetry
opentelemetry = ["openark-core-opentelemetry/opentelemetry", "std"]
opentelemetry-all = [
    "openark-core-opentelemetry/opentelemetry-all",
    "opentelemetry-logs",
    "opentelemetry-metrics",
    "opentelemetry-trace",
]
opentelemetry-otlp = [
    "openark-core-opentelemetry/opentelemetry-otlp",
    "opentelemetry",
]

# OpenTelemetry pillars and functions
opentelemetry-logs = [
    "openark-core-opentelemetry/opentelemetry-logs",
    "opentelemetry",
]
opentelemetry-metrics = [
    "openark-core-opentelemetry/opentelemetry-metrics",
    "opentelemetry",
]
opentelemetry-trace = [
    "openark-core-opentelemetry/opentelemetry-trace",
    "opentelemetry",
]

# Async trait bounds
send = []

# TLS
tls = ["dep:rustls"]

# TLS CryptoProviders
tls-aws-lc-rs = [
    "kube?/rustls-tls",
    "reqwest?/rustls-tls",
    "rustls?/aws_lc_rs",
    "tls",
]
tls-openssl = [
    "kube?/openssl-tls",
    "openark-core-opentelemetry?/tls-openssl",
    "reqwest?/native-tls",
    "std",
    "tls",
]
tls-ring = ["kube?/rustls-tls", "reqwest?/rustls-tls", "rustls?/ring", "tls"]

# Tracing
tracing = ["dep:tracing"]

[dependencies]
openark-core-opentelemetry = { workspace = true, optional = true }

anyhow = { workspace = true, optional = true }
async-trait = { workspace = true, optional = true }
clap = { workspace = true, optional = true, features = [
    "color",
    "derive",
    "env",
    "error-context",
    "help",
    "std",
    "suggestions",
    "unicode",
    "usage",
] }
chrono = { workspace = true, optional = true }
http = { workspace = true, optional = true }
k8s-openapi = { workspace = true, optional = true }
kube = { workspace = true, optional = true }
reqwest = { workspace = true, optional = true, features = ["json"] }
rustls = { workspace = true, optional = true, features = ["tls12"] }
serde = { workspace = true, optional = true }
serde-json = { workspace = true, optional = true }
tracing = { workspace = true, optional = true }
url = { workspace = true, optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
web-sys = { workspace = true, optional = true }
