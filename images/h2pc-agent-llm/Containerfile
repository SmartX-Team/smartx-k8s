# Copyright (c) 2025 Ho Kim (ho.kim@ulagbulag.io). All rights reserved.
# Use of this source code is governed by a GPL-3-style license that can be
# found in the LICENSE file.

{{- $package := "/opt/h2pc/agent/llm" }}

# Download base image
FROM "{{ .Values.image.repo }}:{{ .Values.image.tag }}" AS base

# Configure environment variables
ENV PYTHONUNBUFFERED=1 \
    # prevents python creating .pyc files
    PYTHONDONTWRITEBYTECODE=1 \
    \
    # pip
    PIP_DEFAULT_TIMEOUT=100 \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_NO_CACHE_DIR=off \
    \
    # poetry
    # make poetry install to this location
    POETRY_HOME="/opt/poetry" \
    # make poetry create the virtual environment in the project's root
    # it gets named `.venv`
    POETRY_VIRTUALENVS_IN_PROJECT=true \
    # do not ask any interactive question
    POETRY_NO_INTERACTION=1 \
    \
    # paths
    # this is where our requirements + virtual environment will live
    PYSETUP_PATH={{ $package | quote }} \
    VENV_PATH={{ printf "%s/.venv" $package | quote }}

# Prepend poetry and venv to path
ENV PATH="${POETRY_HOME}/bin:${VENV_PATH}/bin:${PATH}"

# Be ready for building
FROM base AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
        build-essential \
        clang \
        cmake \
        curl \
    && pip install poetry \
    # Cleanup
    && apt-get clean all \
    && rm -rf /var/lib/apt/lists/*

# Load package metadata file
WORKDIR "${PYSETUP_PATH}"
ADD LICENSE main.py pyproject.toml README.md ./

# Build it!
RUN poetry install --only main

# Be ready for serving
FROM base AS server

# Install dependencies
RUN apt-get update && apt-get install -y \
        curl \
        git \
        jq \
        systemd \
        wget \
    # Cleanup
    && apt-get clean all \
    && rm -rf /var/lib/apt/lists/*

# Copy executable files
COPY --from=builder "${PYSETUP_PATH}" "${PYSETUP_PATH}"
COPY ./*.py "${PYSETUP_PATH}"
WORKDIR "${PYSETUP_PATH}"

# Mark as executable
CMD [ "./main.py" ]
